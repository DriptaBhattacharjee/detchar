#!/usr/bin/env python
from gwpy.segments import Segment,SegmentList, DataQualityFlag
from glue.lal import Cache

import argparse
from glob import glob
from os.path import basename

dqsegdb_url = "https://segments.ligo.org"

parser = argparse.ArgumentParser(description='Check whether a set of XML files covers an entire time.')
parser.add_argument('-s','--start', type=int, help='GPS start time.', required=True)
parser.add_argument('-e','--end', type=int, help='GPS end time', required=True)
parser.add_argument('-g','--glob', type=str, help='Pattern to glob for.', required=True)
parser.add_argument('-f','--flag', type=str, help='Segdb flag to check.')
parser.add_argument('-o','--output', type=str, help='File to write ASCII segments to.', required=True)

args = parser.parse_args()

if args.flag:
    state_flag = DataQualityFlag.query_dqsegdb(args.flag, args.start, args.end,
                                            url=dqsegdb_url)
    desired_segs = state_flag.active
else:
    desired_segs = SegmentList([Segment(args.start, args.end)])

covered_segs = []
file_lst = glob(args.glob)
print len(file_lst), "files found"
cache = Cache.from_urls(file_lst)
seglstdct = cache.to_segmentlistdict()
if len(seglstdct.keys()) == 1:
    covered_segs = seglstdct.values()[0]
    covered_segs.coalesce()
elif not seglstdct.keys():
    print "Files do not cover any IFO"
    exit()
else:
    print "Files cover multiple IFOs:", ", ".join(seglstdct.keys())
    exit(1)

# Check what's not covered that should be
missing_segs = desired_segs - covered_segs
fout=open(args.output,'w')
for seg in missing_segs:
    fout.write('%u %u\n' % (int(seg[0]), int(seg[1])))
fout.close()

# Can also check that all times requested were known to the flag
if args.flag:
    flag_segs_request = SegmentList([Segment(args.start, args.end)])
    unknown_times = flag_segs_request - state_flag.known
    if abs(unknown_times):
        print "\nState flag unknown for following times"
    for seg in unknown_times:
        print int(seg[0]), int(seg[1])
 
